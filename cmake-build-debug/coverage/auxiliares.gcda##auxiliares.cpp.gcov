        -:    0:Source:C:/Users/berin/Documents/facultad/exactas/1ero/ALGO 1/tpi2/auxiliares.cpp
        -:    0:Graph:C:\Users\berin\Documents\facultad\exactas\1ero\ALGO 1\tpi2\cmake-build-debug\CMakeFiles\tpi2.dir\auxiliares.gcno
        -:    0:Data:C:\Users\berin\Documents\facultad\exactas\1ero\ALGO 1\tpi2\cmake-build-debug\CMakeFiles\tpi2.dir\auxiliares.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Este archivo contiene las definiciones de las funciones auxiliares
        -:    3:// que ustedes necesiten implementar. Tienen que coincidir con las
        -:    4:// declaraciones de auxiliares.h
        -:    5://
        -:    6:
        -:    7:#include <iostream>
        -:    8:
        -:    9:#include "definiciones.h"
        -:   10:#include "ejercicios.h"
        -:   11:#include "auxiliares.h"
        -:   12:
        -:   13:using namespace std;
        -:   14:
function _Z15adyacenteValidaRSt6vectorIS_IbSaIbEESaIS1_EESt4pairIiiERiS7_ called 189 returned 100% blocks executed 100%
      189:   15:bool adyacenteValida(tablero& t, pos p, int& f, int& c) {
        -:   16:
      189:   17:    int p0 = p.first;
      189:   18:    int p1 = p.second;
      189:   19:    int q0 = p0 + f;
      189:   20:    int q1 = p1 + c;
        -:   21:
      189:   22:    return (q0 >= 0 && q0 < t.size() && q1 >= 0 && q1 < t[0].size() && (f != 0 || c != 0));
      189:   22-block  0
branch  0 taken 174 (fallthrough)
branch  1 taken 15
      174:   22-block  1
call    2 returned 174
branch  3 taken 168 (fallthrough)
branch  4 taken 6
      168:   22-block  2
branch  5 taken 161 (fallthrough)
branch  6 taken 7
      161:   22-block  3
call    7 returned 161
call    8 returned 161
branch  9 taken 146 (fallthrough)
branch 10 taken 15
      146:   22-block  4
branch 11 taken 53 (fallthrough)
branch 12 taken 93
       53:   22-block  5
branch 13 taken 32 (fallthrough)
branch 14 taken 21
      125:   22-block  6
       64:   22-block  7
      189:   22-block  8
        -:   23:}
        -:   24:
function _Z14posicionValidaRSt6vectorIS_IbSaIbEESaIS1_EESt4pairIiiE called 63 returned 100% blocks executed 91%
       63:   25:bool posicionValida(tablero& t, pos p) {
        -:   26:
       63:   27:    int p0 = p.first;
       63:   28:    int p1 = p.second;
        -:   29:
      63*:   30:    return (p0 >= 0 && p0 < t.size() && p1 >= 0 && p1 < t[0].size());
       63:   30-block  0
branch  0 taken 63 (fallthrough)
branch  1 taken 0
       63:   30-block  1
call    2 returned 63
branch  3 taken 63 (fallthrough)
branch  4 taken 0
       63:   30-block  2
branch  5 taken 63 (fallthrough)
branch  6 taken 0
       63:   30-block  3
call    7 returned 63
call    8 returned 63
branch  9 taken 63 (fallthrough)
branch 10 taken 0
       63:   30-block  4
    %%%%%:   30-block  5
       63:   30-block  6
        -:   31:}
        -:   32:
function _Z14posicionJugadaRSt6vectorISt4pairIS0_IiiEiESaIS2_EES1_ called 94 returned 100% blocks executed 100%
       94:   33:bool posicionJugada(jugadas& j, pos p) {
        -:   34:
      598:   35:    for (int i = 0; i < j.size(); i++){
       94:   35-block  0
      504:   35-block  1
      598:   35-block  2
call    0 returned 598
branch  1 taken 547
branch  2 taken 51 (fallthrough)
      547:   36:        if (j[i].first == p){
      547:   36-block  0
call    0 returned 547
call    1 returned 547
branch  2 taken 43 (fallthrough)
branch  3 taken 504
       43:   37:            return true;
       43:   37-block  0
        -:   38:        }
        -:   39:    }
       51:   40:    return false;
       51:   40-block  0
        -:   41:}
        -:   42:
function _Z22posicionTieneBanderitaRSt6vectorISt4pairIiiESaIS1_EES1_ called 16 returned 100% blocks executed 100%
       16:   43:bool posicionTieneBanderita(banderitas& b, pos p) {
        -:   44:
       48:   45:    for (int i = 0; i < b.size(); i++){
       16:   45-block  0
       32:   45-block  1
       48:   45-block  2
call    0 returned 48
branch  1 taken 34
branch  2 taken 14 (fallthrough)
       34:   46:        if (b[i] == p){
       34:   46-block  0
call    0 returned 34
call    1 returned 34
branch  2 taken 2 (fallthrough)
branch  3 taken 32
        2:   47:            return true;
        2:   47-block  0
        -:   48:        }
        -:   49:    }
       14:   50:    return false;
       14:   50-block  0
        -:   51:}
        -:   52:
        -:   53://void agregarPosAJugadas(tablero& t, jugadas& j, banderitas& b, pos p) {
        -:   54://
        -:   55://    bool posJugada = posicionJugada(j,p);
        -:   56://    bool posBanderita = posicionTieneBanderita(b,p);
        -:   57://
        -:   58://    if ( not posJugada && not posBanderita && t[p.first][p.second] == cVACIA){
        -:   59://        j.push_back(make_pair(p, minasAdyacentes(t,p)));
        -:   60://    }
        -:   61://}
        -:   62://
        -:   63:
function _Z14esAdyacente121St4pairIiiERSt6vectorIS_IS0_iESaIS2_EERS1_IS1_IbSaIbEESaIS7_EE called 5 returned 100% blocks executed 83%
        5:   64:bool esAdyacente121(pos p, jugadas& j, tablero& t) {
        -:   65:
        5:   66:    bool res = false;
        -:   67:
        5:   68:    pos p1 = make_pair(p.first-1, p.second);
        5:   68-block  0
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   68-block  1
        5:   69:    pos p2 = make_pair(p.first+1, p.second);
        5:   69-block  0
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   69-block  1
        5:   70:    pos p3 = make_pair(p.first, p.second-1);
        5:   70-block  0
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   70-block  1
        5:   71:    pos p4 = make_pair(p.first, p.second+1);
        5:   71-block  0
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   71-block  1
        -:   72:
        5:   73:    if (es121Horizontal(p1,j, t) || es121Horizontal(p2,j, t) || es121Vertical(p3,j, t) || es121Vertical(p4,j, t)){
        5:   73-block  0
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
        5:   73-block  1
branch  3 taken 4 (fallthrough)
branch  4 taken 1
        4:   73-block  2
call    5 returned 4
branch  6 taken 4 (fallthrough)
branch  7 taken 0 (throw)
        4:   73-block  3
branch  8 taken 4 (fallthrough)
branch  9 taken 0
        4:   73-block  4
call   10 returned 4
branch 11 taken 4 (fallthrough)
branch 12 taken 0 (throw)
        4:   73-block  5
branch 13 taken 3 (fallthrough)
branch 14 taken 1
        3:   73-block  6
call   15 returned 3
branch 16 taken 3 (fallthrough)
branch 17 taken 0 (throw)
        3:   73-block  7
branch 18 taken 0 (fallthrough)
branch 19 taken 3
        2:   73-block  8
        3:   73-block  9
        5:   73-block 10
branch 20 taken 2 (fallthrough)
branch 21 taken 3
        2:   74:        res = true;
        2:   74-block  0
        -:   75:    }
        5:   76:    return res;
        5:   76-block  0
        5:   76-block  1
        -:   77:}
        -:   78:
function _Z15es121HorizontalSt4pairIiiERSt6vectorIS_IS0_iESaIS2_EERS1_IS1_IbSaIbEESaIS7_EE called 9 returned 100% blocks executed 91%
        9:   79:bool es121Horizontal(pos p, jugadas& j, tablero& t) {
        -:   80:
        9:   81:    bool res = false;
        -:   82:
        9:   83:    pos pos1 = make_pair(p.first, p.second-1);
        9:   83-block  0
call    0 returned 9
branch  1 taken 9 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   83-block  1
        9:   84:    pos pos2 = make_pair(p.first, p.second+1);
        9:   84-block  0
call    0 returned 9
branch  1 taken 9 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   84-block  1
        -:   85:
        9:   86:    if ((posicionJugada(j,p) && minasAdyacentes(t,p) == 2 ) && (posicionJugada(j,pos1) && minasAdyacentes(t,pos1) == 1 ) && (posicionJugada(j,pos2) && minasAdyacentes(t,pos2) == 1 )){
        9:   86-block  0
call    0 returned 9
branch  1 taken 9 (fallthrough)
branch  2 taken 0 (throw)
        9:   86-block  1
branch  3 taken 3 (fallthrough)
branch  4 taken 6
        3:   86-block  2
call    5 returned 3
branch  6 taken 3 (fallthrough)
branch  7 taken 0 (throw)
        3:   86-block  3
branch  8 taken 1 (fallthrough)
branch  9 taken 2
        1:   86-block  4
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   86-block  5
branch 13 taken 1 (fallthrough)
branch 14 taken 0
        1:   86-block  6
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:   86-block  7
branch 18 taken 1 (fallthrough)
branch 19 taken 0
        1:   86-block  8
call   20 returned 1
branch 21 taken 1 (fallthrough)
branch 22 taken 0 (throw)
        1:   86-block  9
branch 23 taken 1 (fallthrough)
branch 24 taken 0
        1:   86-block 10
call   25 returned 1
branch 26 taken 1 (fallthrough)
branch 27 taken 0 (throw)
        1:   86-block 11
branch 28 taken 1 (fallthrough)
branch 29 taken 0
        1:   86-block 12
        8:   86-block 13
        9:   86-block 14
branch 30 taken 1 (fallthrough)
branch 31 taken 8
        1:   87:        res = true;
        1:   87-block  0
        -:   88:    }
        -:   89:
        9:   90:    return res;
        9:   90-block  0
        9:   90-block  1
        -:   91:}
        -:   92:
function _Z13es121VerticalSt4pairIiiERSt6vectorIS_IS0_iESaIS2_EERS1_IS1_IbSaIbEESaIS7_EE called 7 returned 100% blocks executed 91%
        7:   93:bool es121Vertical(pos p, jugadas& j, tablero& t){
        -:   94:
        7:   95:    bool res = false;
        -:   96:
        7:   97:    pos pos1 = make_pair(p.first-1, p.second);
        7:   97-block  0
call    0 returned 7
branch  1 taken 7 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   97-block  1
        7:   98:    pos pos2 = make_pair(p.first+1, p.second);
        7:   98-block  0
call    0 returned 7
branch  1 taken 7 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   98-block  1
        -:   99:
        7:  100:    if ((posicionJugada(j,p) && minasAdyacentes(t,p) == 2 ) && (posicionJugada(j,pos1) && minasAdyacentes(t,pos1) == 1 ) && (posicionJugada(j,pos2) && minasAdyacentes(t,pos2) == 1 )){
        7:  100-block  0
call    0 returned 7
branch  1 taken 7 (fallthrough)
branch  2 taken 0 (throw)
        7:  100-block  1
branch  3 taken 1 (fallthrough)
branch  4 taken 6
        1:  100-block  2
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  100-block  3
branch  8 taken 1 (fallthrough)
branch  9 taken 0
        1:  100-block  4
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:  100-block  5
branch 13 taken 1 (fallthrough)
branch 14 taken 0
        1:  100-block  6
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  100-block  7
branch 18 taken 1 (fallthrough)
branch 19 taken 0
        1:  100-block  8
call   20 returned 1
branch 21 taken 1 (fallthrough)
branch 22 taken 0 (throw)
        1:  100-block  9
branch 23 taken 1 (fallthrough)
branch 24 taken 0
        1:  100-block 10
call   25 returned 1
branch 26 taken 1 (fallthrough)
branch 27 taken 0 (throw)
        1:  100-block 11
branch 28 taken 1 (fallthrough)
branch 29 taken 0
        1:  100-block 12
        6:  100-block 13
        7:  100-block 14
branch 30 taken 1 (fallthrough)
branch 31 taken 6
        1:  101:        res = true;
        1:  101-block  0
        -:  102:    }
        -:  103:
        7:  104:    return res;
        7:  104-block  0
        7:  104-block  1
        -:  105:}
        -:  106:
function _Z31esPosicionSinJugarYSinBanderitaRSt6vectorIS_IbSaIbEESaIS1_EERS_ISt4pairIS5_IiiEiESaIS7_EERS_IS6_SaIS6_EES6_ called 6 returned 100% blocks executed 100%
        6:  107:bool esPosicionSinJugarYSinBanderita(tablero& t, jugadas& j, banderitas& b, pos p){
        -:  108:
        6:  109:    return (posicionValida(t,p) && not posicionTieneBanderita(b,p) && not posicionJugada(j,p));
        6:  109-block  0
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0
        6:  109-block  1
call    3 returned 6
branch  4 taken 5 (fallthrough)
branch  5 taken 1
        5:  109-block  2
call    6 returned 5
branch  7 taken 5 (fallthrough)
branch  8 taken 0
        5:  109-block  3
        1:  109-block  4
        6:  109-block  5
        -:  110:
        -:  111:}
        -:  112:
function _Z14CasillasVaciasRSt6vectorIS_IbSaIbEESaIS1_EE called 3 returned 100% blocks executed 80%
        3:  113:vector<pos> CasillasVacias(tablero& t) {
        -:  114:
        3:  115:    vector<pos> posicionesDeCasillasVacias;
        3:  115-block  0
call    0 returned 3
        -:  116:
       18:  117:    for (int f = 0; f < t.size(); f++) {
       15:  117-block  0
       18:  117-block  1
call    0 returned 18
branch  1 taken 15
branch  2 taken 3 (fallthrough)
       90:  118:        for (int c = 0; c < t[0].size(); c++) {
       15:  118-block  0
       75:  118-block  1
       90:  118-block  2
call    0 returned 90
call    1 returned 90
branch  2 taken 75
branch  3 taken 15 (fallthrough)
       75:  119:            if (t[f][c] == cVACIA) {
       75:  119-block  0
call    0 returned 75
call    1 returned 75
branch  2 taken 75 (fallthrough)
branch  3 taken 0 (throw)
       75:  119-block  1
call    4 returned 75
branch  5 taken 57 (fallthrough)
branch  6 taken 18
    $$$$$:  119-block  2
       57:  120:                pos p = make_pair(f, c);
       57:  120-block  0
call    0 returned 57
branch  1 taken 57 (fallthrough)
branch  2 taken 0 (throw)
       57:  121:                posicionesDeCasillasVacias.push_back(p);
       57:  121-block  0
call    0 returned 57
branch  1 taken 57 (fallthrough)
branch  2 taken 0 (throw)
        -:  122:            }
        -:  123:        }
        -:  124:    }
        3:  125:    return posicionesDeCasillasVacias;
        3:  125-block  0
        3:  125-block  1
    =====:  126:}
    $$$$$:  126-block  0
call    0 never executed
